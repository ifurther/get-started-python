# -*- coding: utf-8 -*-
"""下載停車場

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xoNbNQjXAX7mR1QPCrmlXIxB0o7a6_4V
"""

import json,csv,requests,os


from cloudant.client import Cloudant
from cloudant.error import CloudantException
from cloudant.result import Result, ResultByKey

json_url_taipei = 'https://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=a880adf3-d574-430a-8e29-3192a41897a5'

data = requests.get(json_url_taipei)

parking_db_name='parking_tw'
client = None
parking_db = None
#data.text

#data.text.split(",\n")

if 'VCAP_SERVICES' in os.environ:
    vcap = json.loads(os.getenv('VCAP_SERVICES'))
    print('Found VCAP_SERVICES')
    if 'cloudantNoSQLDB' in vcap:
        creds = vcap['cloudantNoSQLDB'][0]['credentials']
        user = creds['username']
        password = creds['password']
        url = 'https://' + creds['host']
        client = Cloudant(user, password, url=url, connect=True)
        #db = client.create_database(db_name, throw_on_exists=False)
        parking_db = client.create_database(parking_db_name, throw_on_exists=False)
elif "CLOUDANT_URL" in os.environ:
    client = Cloudant(os.environ['CLOUDANT_USERNAME'], os.environ['CLOUDANT_PASSWORD'], url=os.environ['CLOUDANT_URL'], connect=True)
    #db = client.create_database(db_name, throw_on_exists=False)
    parking_db = client.create_database(parking_db_name, throw_on_exists=False)
elif os.path.isfile('vcap-local.json'):
    with open('vcap-local.json') as f:
        vcap = json.load(f)
        print('Found local VCAP_SERVICES')
        creds = vcap['services']['cloudantNoSQLDB'][0]['credentials']
        user = creds['username']
        password = creds['password']
        url = 'https://' + creds['host']
        client = Cloudant(user, password, url=url, connect=True)
        #db = client.create_database(db_name, throw_on_exists=False)
        parking_db = client.create_database(parking_db_name, throw_on_exists=False)
        
def download_taipei_parking(data):
    for parkdata in json.loads(data.text)['result']['results']:
        #print(parkdata['_id'])
        jsonDocument = {
            "ParkName": parkdata['停車場名稱'],
            "Parlat": parkdata['緯度(WGS84)'],
            "Parlon": parkdata['經度(WGS84)'],
            "Region": 'Taipei'
        }
        newDocument = parking_db.create_document(jsonDocument)

        # Check that the document exists in the database.
        if newDocument.exists():
            print("Document '{0}' successfully created.".format(parkdata['_id']))

client.connect()
download_taipei_parking(data)
client.disconnect()